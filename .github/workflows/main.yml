name: Build and Push Docker image to ECR

on:
  workflow_dispatch:
    inputs:
      deploy_gateway:  #spring-petclinic-api-gateway
        type: boolean
        default: false
      deploy_customers:  #spring-petclinic-customer-service
        type: boolean
        default: false
      deploy_vets:  #spring-petclinic-vets-service
        type: boolean
        default: false
      deploy_visits:  #spring-petclinic-visits-service
        type: boolean
        default: false
      deploy_discovery:  #spring-petclinic-discovery-server
        type: boolean
        default: false

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      ECR_REGISTRY: 720628977237.dkr.ecr.ap-south-1.amazonaws.com

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Java
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Set short commit SHA
      id: vars
      run: echo "COMMIT_SHORT_SHA=$(git rev-parse --short ${{ github.sha }})" >> $GITHUB_ENV

    # TEST + BUILD ONLY SELECTED SERVICES
    - name: Test & build selected services
      run: |
        if [ "${{ inputs.deploy_gateway }}" == "true" ]; then
          cd spring-petclinic-api-gateway && mvn test && mvn package -DskipTests && cd ..
        fi
        if [ "${{ inputs.deploy_customers }}" == "true" ]; then
          cd spring-petclinic-customers-service && mvn test && mvn package -DskipTests && cd ..
        fi
        if [ "${{ inputs.deploy_vets }}" == "true" ]; then
          cd spring-petclinic-vets-service && mvn test && mvn package -DskipTests && cd ..
        fi
        if [ "${{ inputs.deploy_visits }}" == "true" ]; then
          cd spring-petclinic-visits-service && mvn test && mvn package -DskipTests && cd ..
        fi
        if [ "${{ inputs.deploy_discovery }}" == "true" ]; then
          cd spring-petclinic-discovery-server && mvn test && mvn package -DskipTests && cd ..
        fi

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{secrets.AWS_ACCESS_KEY}}
        aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
        aws-region: ${{secrets.AWS_REGION}}

    - name: Login to Amazon ECR
      id: login-ecr
      run: |
        aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | \
          docker login --username AWS --password-stdin ${{ env.ECR_REGISTRY }}
          
    - name: Build and Push Docker Images
      run: |  
        if [ "${{ inputs.deploy_gateway }}" = "true" ]; then
          docker build -t $ECR_REGISTRY/api-gateway:${COMMIT_SHORT_SHA} spring-petclinic-api-gateway
          docker push $ECR_REGISTRY/api-gateway:${COMMIT_SHORT_SHA}
          docker tag $ECR_REGISTRY/api-gateway:${COMMIT_SHORT_SHA} $ECR_REGISTRY/api-gateway:latest
          docker push $ECR_REGISTRY/api-gateway:latest
        fi

        if [ "${{inputs.deploy_customers}}" == "true" ]; then
          docker build -t $ECR_REGISTRY/customers-service:${COMMIT_SHORT_SHA} spring-petclinic-customers-service
          docker push $ECR_REGISTRY/customers-service:${COMMIT_SHORT_SHA}
          docker tag $ECR_REGISTRY/customers-service:${COMMIT_SHORT_SHA} $ECR_REGISTRY/customers-service:latest
          docker push $ECR_REGISTRY/customers-service:latest
        fi
        if [ "${{inputs.deploy_vets}}" == "true" ]; then
          docker build -t $ECR_REGISTRY/vets-service:${COMMIT_SHORT_SHA} spring-petclinic-vets-service
          docker push $ECR_REGISTRY/vets-service:${COMMIT_SHORT_SHA}
          docker tag $ECR_REGISTRY/vets-service:${COMMIT_SHORT_SHA} $ECR_REGISTRY/vets-service:latest
          docker push $ECR_REGISTRY/vets-service:latest
          
        fi
        if [ "${{inputs.deploy_visits}}" == "true" ]; then
          docker build -t $ECR_REGISTRY/visits-service:${COMMIT_SHORT_SHA} spring-petclinic-visits-service
          docker push $ECR_REGISTRY/visits-service:${COMMIT_SHORT_SHA}
          docker tag $ECR_REGISTRY/visits-service:${COMMIT_SHORT_SHA} $ECR_REGISTRY/visits-service:latest
          docker push $ECR_REGISTRY/visits-service:latest
        fi
        if [ "${{inputs.deploy_discovery}}" == "true" ]; then
          docker build -t $ECR_REGISTRY/discovery-server:${COMMIT_SHORT_SHA} spring-petclinic-discovery-server
          docker push $ECR_REGISTRY/discovery-server:${COMMIT_SHORT_SHA}
          docker tag $ECR_REGISTRY/discovery-server:${COMMIT_SHORT_SHA} $ECR_REGISTRY/discovery-server:latest
          docker push $ECR_REGISTRY/discovery-server:latest
        fi
        


